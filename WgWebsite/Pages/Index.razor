@page "/"
@inject IJSRuntime JSRuntime
@inject Data.Translator trans
@inject Data.DataBaseService db
@using Microsoft.JSInterop
@using System.Security.Cryptography;
@using Model;
@using System.Text;
@using System.Linq;

@code {
    private List<User> users;
    List<string> currentRoles;
    private Dictionary<long, Dictionary<string, bool>> roles;
    private User NewUser = new User();
    private string newPassword = "";
    private string newPasswordRepeat = "";
    private string password = "";
    private string passwordRepeat = "";
    private SHA256 mySHA256 = SHA256.Create();
    private string newLanguage = "";
    protected override void OnInitialized()
    {
        users = db.GetUserRoles()?.ToList();
        currentRoles = Roles.getAll();
        roles = new Dictionary<long, Dictionary<string, bool>>();
        if(users != null)
        {
            foreach (var u in users)
            {
                roles.Add(u.UserId, new Dictionary<string, bool>());
                foreach (var r in Roles.getAll()) roles[u.UserId].Add(r, u.Role.Contains(r));
            }
        }
    }
    private void SendChangePw(long userid)
    {
        if (newPassword.Length > 0 && newPassword == newPasswordRepeat && db.EditUser(new User { UserId = userid, PassHash = mySHA256.ComputeHash(Encoding.ASCII.GetBytes(newPassword)) }, "PassHash"))
        {
            JSRuntime.InvokeVoidAsync("highlightButtonSuccess", "send-change-pw", trans.WordFor("Done"));
        }
        else
        {
            JSRuntime.InvokeVoidAsync("highlightButtonFail", "send-change-pw", trans.WordFor("Failed"));
        }
    }
    private void SendNewUser()
    {
        if (NewUser.Email != null && NewUser.Name != null && password != null && passwordRepeat != null)
        {
            if (NewUser.Email.Contains("@") && !users.Any(u => u.Name == NewUser.Name) && NewUser.Name.Length > 3 &&
                password == passwordRepeat && password.Length > 4 && !users.Any(u => u.Email == NewUser.Email))
            {
                NewUser.PassHash = mySHA256.ComputeHash(Encoding.ASCII.GetBytes(password));
                if (db.AddUser(NewUser))
                {
                    JSRuntime.InvokeVoidAsync("highlightButtonSuccess", "send-new-user", trans.WordFor("Done"));
                    return;
                }
            }
        }
        JSRuntime.InvokeVoidAsync("highlightButtonFail", "send-new-user", trans.WordFor("Failed"));
    }
    private void SendLanguage(string l, long userid)
    {
        var u = new User() { Language = l, UserId = userid };
        if (!trans.Languages().Any(lang => l == lang)) return;
        db.EditUser(u, "Language");
    }
    private void ChangeUserRoles()
    {
        for (var l = 0; l < users.Count; l++)
        {
            var newroles = "";
            foreach (var role in Roles.getAll())
            {
                if (roles[users[l].UserId][role])
                {
                    newroles += " " + role;
                }
            }
            users[l].Role = newroles.Substring(1);
        }
        db.ChangeUserRoles(users);
        JSRuntime.InvokeVoidAsync("highlightButtonSuccess", "apply-change-permission", trans.WordFor("Done"));
    }
    private void ToggleRole(long id, string ro)
    {
        roles[id][ro] = !roles[id][ro];
    }
}

<AuthorizeView>
    <NotAuthorized>
        <div style="text-align: center;">
            <svg id="logo" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" width="300" height="300">
                <polyline points="150,5 150,295" stroke-linecap="round" stroke-width="5" stroke="#f8c92b"></polyline>
                <polyline points="75,45 75, 255" stroke-linecap="round" stroke-width="5" stroke="#f8c92b"></polyline>
                <polyline points="75,185 150, 185" stroke-linecap="round" stroke-width="5" stroke="#f8c92b"></polyline>
                <polyline points="150,45 225,115 150,185 225,255" stroke-linecap="round" stroke-width="5" stroke="#f8c92b" fill="none"></polyline>
            </svg>
        </div>
    </NotAuthorized>
    <Authorized>
        @{
            var thisuser = db.GetUserById(long.Parse(context.User.Claims.FirstOrDefault(c => c.Type == "UserId").Value));
            newLanguage = thisuser.Language;
            trans.SetLanguage(thisuser.Language);
        }
        <div class="card">
            <div class="card-body">
                <img class="card-img-top" src="..." alt="Card image cap">
                <h5 class="card-title">@trans.WordFor("Hello") @thisuser.Name</h5>
                <div class="card-text">blabla</div>
            </div>
        </div>
        <div style="height: 30px;">&nbsp;</div>
        <div class="card-deck" style="margin-bottom:10px;">
            <div class="card h-100">
                <h5 class="card-header" style="cursor:pointer;" onclick="$('.settings-body').not('#language-body').slideUp(); $('#language-body').slideToggle();">@trans.WordFor("Change Language")</h5>
                <div class="card-subtitle mb-2 text-muted" style=" padding: 1.25rem; padding-bottom: 0.5rem;" onclick="$('.settings-body').not('#language-body').slideUp(); $('#language-body').slideToggle();">@trans.WordFor("Change the language of this site")</div>
                <div style="display:none" id="language-body" class="card-body settings-body">
                    <div class="form-check">
                        @foreach (var lang in trans.Languages())
                        {
                            var curlan = lang;
                            if (thisuser.Language != null && thisuser.Language == lang)
                            {
                                <input type="radio" @onclick=@(e => db.EditUser(new User {UserId=thisuser.UserId, Language=curlan }, "Language")) class="form-check-input" id="@lang" name="language-radios" checked>
                            }
                            else
                            {
                                <input type="radio" @onclick=@(e =>  db.EditUser(new User {UserId=thisuser.UserId, Language=curlan }, "Language")) class="form-check-input" id="@lang" name="language-radios">
                            }
                            <label class="form-check-label" for="languages" onclick="document.getElementById('@lang').click()">@lang</label>
                            <br />
                        }
                    </div>
                    <button style="margin-top: 20px;" class="btn btn-primary w-100" onclick="document.location.reload()">@trans.WordFor("Reload")</button>
                </div>
            </div>
            <div class="card h-100">
                <h5 class="card-header" style="cursor:pointer;" onclick="$('.settings-body').not('#picture-body').slideUp(); $('#picture-body').slideToggle();">@trans.WordFor("Change Picture")</h5>
                <div class="card-subtitle mb-2 text-muted" style=" padding: 1.25rem; padding-bottom: 0.5rem;" onclick="$('.settings-body').not('#picture-body').slideUp(); $('#picture-body').slideToggle();">@trans.WordFor("Add or change your profile picture")</div>
                <div style="display:none" id="picture-body" class="card-body settings-body">
                    TODO: upload field
                </div>
            </div>
            <div class="card h-100">
                <h5 class="card-header" style="cursor:pointer;" onclick="$('.settings-body').not('#password-body').slideUp(); $('#password-body').slideToggle();">@trans.WordFor("Change Password")</h5>
                <div class="card-subtitle mb-2 text-muted" style=" padding: 1.25rem; padding-bottom: 0.5rem;" onclick="$('.settings-body').not('#password-body').slideUp(); $('#password-body').slideToggle();">@trans.WordFor("Change your password")</div>
                <div style="display:none" id="password-body" class="settings-body card-body">
                    <input class="form-control" placeholder=@trans.WordFor("Password") type="password" @bind="newPassword" />
                    <div style="height: 10px; width:10px;"></div>
                    <input class="form-control" placeholder=@trans.WordFor("Repeat") type="password" @bind="newPasswordRepeat" />
                    <div style="height: 10px; width:10px;"></div>
                    <button id="send-change-pw" value=@trans.WordFor("Send") class="btn btn-primary w-100" @onclick=@(e => SendChangePw(thisuser.UserId))>@trans.WordFor("Send")</button>
                </div>
            </div>
        </div>
        <div class="card-deck">
            @if (context.User.Claims.Any(c => c.Value == Roles.Karma))
            {
                <div class="card h-100">
                    <h5 class="card-header" style="cursor:pointer;" onclick="$('.settings-body').not('#add-user-body').slideUp(); $('#add-user-body').slideToggle();">@trans.WordFor("Add User")</h5>
                    <div class="card-subtitle mb-2 text-muted" style=" padding: 1.25rem; padding-bottom: 0.5rem;" onclick="$('.settings-body').not('#add-user-body').slideUp(); $('#add-user-body').slideToggle();">@trans.WordFor("Add a new user here")</div>
                    <div id="add-user-body" style="display:none" class="settings-body card-body">
                        <input class="form-control" placeholder=@trans.WordFor("Name") type="text" @bind="NewUser.Name" />
                        <div style="height: 10px; width:10px;"></div>
                        <input class="form-control" placeholder=@trans.WordFor("Email") type="email" @bind="NewUser.Email" />
                        <div style="height: 10px; width:10px;"></div>
                        <input class="form-control" placeholder=@trans.WordFor("Password") type="password" @bind="password" />
                        <div style="height: 10px; width:10px;"></div>
                        <input class="form-control" placeholder=@trans.WordFor("Repeat Password") type="password" @bind="passwordRepeat" />
                        <div style="height: 10px; width:10px;"></div>
                        <button id="send-new-user" value=@trans.WordFor("Send") class="btn btn-primary w-100" @onclick="SendNewUser">@trans.WordFor("Send")</button>
                    </div>
                </div>
            }
            @if (context.User.Claims.Any(c => c.Value == Roles.Admin))
            {
                <div class="card h-100">
                    <h5 class="card-header" style="cursor:pointer;" onclick="$('.settings-body').not('#permissions-body').slideUp(); $('#permissions-body').slideToggle();">@trans.WordFor("Change user permissions")</h5>
                    <div class="card-subtitle mb-2 text-muted" style=" padding: 1.25rem; padding-bottom: 0.5rem;" onclick="$('.settings-body').not('#permissions-body').slideUp(); $('#permissions-body').slideToggle();">@trans.WordFor("Add or remove permissions to users")</div>
                    <div id="permissions-body" style="display:none" class="card-body settings-body">
                        @for (var k = 0; k < users.Count; k++)
                        {
                            <div class="card-body">
                                <h5>@users[k].Name</h5>
                                @foreach (var role in currentRoles)
                                {
                                    var id = users[k].UserId;
                                    <div>
                                        <div style="float: left;">@role:</div>
                                        <div style="float: right;"><input type="checkbox" @bind="roles[id][role]" /></div>
                                    </div>
                                    <br>
                                }
                            </div>
                        }
                        <button id="apply-change-permission" class="btn btn-primary w-100" @onclick="ChangeUserRoles">@trans.WordFor("Apply")</button>
                    </div>
                </div>
            }
        </div>
    </Authorized>
</AuthorizeView>